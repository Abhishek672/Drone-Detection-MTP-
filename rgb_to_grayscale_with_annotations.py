# -*- coding: utf-8 -*-
"""RGB_to_Grayscale_with_annotations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MDpqyYOo1VhHvaDXtgUgVJ51pJFc7vEp
"""

from PIL import Image,ImageOps
import glob
import os
import shutil

def convert_to_grayscale(source_directory, destination_directory):
  """
  Given a source_directory that contains the images and their .txt annotations
  The function will convert all images of format ['.tif', '.tiff', '.bmp', '.jpg', '.jpeg', '.gif', '.png', '.eps']
  into greyscale and put them in destination_directory with their .txt annotations and the name will remain same

  make sure you have created a destination_directory in advance

  source_directory -      /content/gdrive/MyDrive/Folder
  destination_directory - /content/gdrive/MyDrive/Folder
  """

  image_extensions = ['.tif', '.tiff', '.bmp', '.jpg', '.jpeg', '.gif', '.png', '.eps']

  #collect all images path in images_path = [] 
  images_path = []
  for ext in image_extensions:
    temp_path = os.path.join(source_directory,'*'+ext)
    images_path.extend(glob.glob(temp_path))

  #get the length of string source_directory
  length = len(source_directory)
  for i in range(len(images_path)):
    image_complete_path = images_path[i]
    image_name = image_complete_path[length+1:]

    #get the image
    im1 = Image.open(image_complete_path)
 
    #applying greyscale method
    im2 = ImageOps.grayscale(im1)
 
    #save it to the destination folder..
    im2.save(os.path.join(destination_directory,image_name))

  #copy all .txt annotations from the source_directory to destination_directory
  annotations_path = glob.glob(os.path.join(source_directory, '*.txt'))

  #here the destination folder path should end with a '/' (check if it is varying according to different OS)
  for annot in annotations_path:
    shutil.copy(annot, destination_directory+'/')

  return